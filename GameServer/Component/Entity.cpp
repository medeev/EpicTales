////////////////////////////////////////////////////////////////////////////////////////////////////
/// @ brief		엔티티 클래스
///
///	@ date		2024-3-6
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Entity.h"

#include "IComponent.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  컴포넌트를 추가한다
////////////////////////////////////////////////////////////////////////////////////////////////////
void Entity::addComponent(EComponentType type, IComponent* comp, EComponentUpdate isUpdate)
{
	auto ret = _components.insert(std::make_pair(type, comp));
	if (!ret.second)
	{
		WARN_LOG("already valid component. [componentId: %zd]", (size_t)type);
	}
	else
	{
		if (isUpdate == EComponentUpdate::kYes)
			_updates.push_back(comp);
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  컴포넌트를 초기화한다
////////////////////////////////////////////////////////////////////////////////////////////////////
void Entity::initComponents()
{
	for (auto& component : _components)
		if (component.second)
			component.second->initialize();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  컴포넌트를 정리한다
////////////////////////////////////////////////////////////////////////////////////////////////////
void Entity::finalizeComponents()
{
	for (auto& component : _components)
		if (component.second)
			component.second->finalize();
}


////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  컴포넌트를 룸진입후(로직스레드)처리한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
void Entity::componentBeginPlay()
{
	for (auto& component : _components)
		if (component.second)
			component.second->beginPlay();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  컴포넌트를 업데이트한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
void Entity::updateComponent(int64_t curTime)
{
	for (auto& component : _updates)
		if (component)
			component->update(curTime);
}
