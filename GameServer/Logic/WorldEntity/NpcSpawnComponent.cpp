

#include "Pch.h"
#include "NpcSpawnComponent.h"

#include <Data/Info/NpcInfo.h>
#include <Data/Info/WorldInfo.h>

#include "Actor/ActorTypes.h"
#include "Actor/Npc.h"
#include "Room/World.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief		생성자
////////////////////////////////////////////////////////////////////////////////////////////////////
NpcSpawnComponent::NpcSpawnComponent(World& world)
	:
	IComponent(EComponentType::NpcSpawn, world, EComponentUpdate::kYes),
	_world(world)
{
	_nextUpdate = world.getTime();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief		소멸자
////////////////////////////////////////////////////////////////////////////////////////////////////
NpcSpawnComponent::~NpcSpawnComponent()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  현재 스폰컴포넌트로 생성된 Npc를 모두 죽인다
////////////////////////////////////////////////////////////////////////////////////////////////////
void NpcSpawnComponent::removeAllSpawnedNpc()
{
	for (auto& pair : _world.getNpcList())
	{
		auto npc = pair.second;
		ENSURE(npc, continue);

	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief		초기화한다
////////////////////////////////////////////////////////////////////////////////////////////////////
void NpcSpawnComponent::initialize()
{
	resetSpawnGroup(_world.getInfo().getNpcSpawnDatas());
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief		정리한다
////////////////////////////////////////////////////////////////////////////////////////////////////
void NpcSpawnComponent::finalize()
{
	_spawners.clear();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief		갱신한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
void NpcSpawnComponent::update(int64_t curTime)
{
	if (curTime < _nextUpdate)
		return;

	_nextUpdate = curTime + 500;

	for (auto& spawner : _spawners)
		spawner->update(curTime);
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief  Npc스폰그룹을 특정그룹으로 리셋한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
void NpcSpawnComponent::resetSpawnGroup(const std::vector<NpcSpawnDataPtr>& spawnDatas)
{
	_spawners.clear();

	if (spawnDatas.empty())
		return;

	for (const auto& info : spawnDatas)
	{
		NpcInfoPtr npcInfo(info->_npcInfoId);
		ENSURE(npcInfo, continue);

		NpcSpawnerPtr spawner = std::make_shared<NpcSpawner>(_world, *info, *npcInfo);
		_spawners.push_back(spawner);
		
	}

	if (_spawners.size() > 300)
		WARN_LOG("check spawner size is : %zd", _spawners.size());
}
