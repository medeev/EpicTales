
#include "Pch.h"
#include "UserManager.h"
#include "User.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
/// @ brief		연결 대기할 객체를 얻는 이벤트
////////////////////////////////////////////////////////////////////////////////////////////////////
Core::ConnectionPtr UserManager::onAllocateConnection()
{
	auto user = std::make_shared<User>(++_connectionId);
	user->setUserPtr(user);

	return user;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @ brief		연결 성공 이벤트
////////////////////////////////////////////////////////////////////////////////////////////////////
void UserManager::onAccepted(Core::Connection& connection)
{
	INFO_LOG("accept!! [ip:%s, this:%p]", connection.getRemoteAddress().c_str(), this);

}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @ brief		연결 실패 이벤트
////////////////////////////////////////////////////////////////////////////////////////////////////
void UserManager::onAcceptFailed(Core::Connection& connection, const AsioErrorCode& error)
{
	WARN_LOG("Failed to accept connection. [ErrMsg: %s]", error.message().c_str());

	const UserPtr user = std::dynamic_pointer_cast<User>(connection.getConnectionPtr());
	ENSURE(user, return);

	remove(user->getId());
}

